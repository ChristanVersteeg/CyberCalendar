name: Daily Tip Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: # Added this trigger
  push:
    branches: [ main ]

jobs:
  update-tip:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get and Decompress TIPS JSON
        id: get_tips_json
        env:
          TIPS_COMPRESSED_LZMA_ENCODED: ${{ secrets.TIPS_COMPRESSED_LZMA }}
        run: |
          set -euo pipefail
          echo "Fetching and decompressing tips..."
          DECOMPRESSED_JSON="" #initialize

          if [[ -n "$TIPS_COMPRESSED_LZMA_ENCODED" ]]; then
            echo "$TIPS_COMPRESSED_LZMA_ENCODED" | base64 -d > compressed_data.xz
            echo "Base64 decoded data written to compressed_data.xz"

            if [[ -f "compressed_data.xz" ]]; then
              unxz -c compressed_data.xz > tips.json.decompressed
              DECOMPRESS_STATUS=$?
              if [[ $DECOMPRESS_STATUS -eq 0 ]]; then
                DECOMPRESSED_JSON=$(cat tips.json.decompressed)
                echo "LZMA decompressed data."
                rm compressed_data.xz tips.json.decompressed
              else
                echo "Error: Failed to decompress tips data using lzma!  unxz exit code: $DECOMPRESS_STATUS"
                echo "{}" > decompressed_tips.json # create empty json
                exit 1
              fi
            else
              echo "Error: Could not find the base64 decoded file 'compressed_data.xz'!"
              echo "{}" > decompressed_tips.json # create empty json
              exit 1
            fi
          else
            echo "Error: Secret 'TIPS_COMPRESSED_LZMA' not found!"
            echo "{}" > decompressed_tips.json # create empty json
            exit 1
          fi
          # Write the decompressed JSON to a file
          echo "$DECOMPRESSED_JSON" > decompressed_tips.json
          echo "Decompressed JSON written to decompressed_tips.json"

      - name: Get current tip and image info
        id: tip_info
        run: |
          DAY=$(date +%j | sed 's/^0*//')
          # Read JSON from the file
          if [[ -s "decompressed_tips.json" ]]; then
            TIP=$(jq -r ".tips[$((DAY-1))].text" decompressed_tips.json)
            IMAGE_BASE=$(jq -r ".tips[$((DAY-1))].image" decompressed_tips.json)
          else
            TIP=""
            IMAGE_BASE=""
          fi
          echo "tip=$TIP" >> $GITHUB_OUTPUT
          echo "image_base=$IMAGE_BASE" >> $GITHUB_OUTPUT

      - name: Download image if available
        id: download_image
        if: steps.tip_info.outputs.image_base != '' && steps.tip_info.outputs.image_base != 'null'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          IMAGE_BASE="${{ steps.tip_info.outputs.image_base }}"
          ORIGINAL="${IMAGE_BASE}.png"

          # Download the image
          curl -sSL \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3.raw" \
            -o "image.png" \
            "https://api.github.com/repos/ChristanVersteeg/CyberTips/contents/images/${ORIGINAL}"

          # Verify the image was downloaded
          if [[ -f "image.png" ]]; then
            echo "Image downloaded successfully as image.png"
            echo "image_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Failed to download image"
            echo "image_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare gh-pages branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout --orphan temp
          git rm -rf .

      - name: List files in workspace
        run: |
          echo "Current working directory: ${{ github.workspace }}"
          ls -al ${{ github.workspace }}

      - name: Copy index.html
        working-directory: ${{ github.workspace }}
        run: |
          TEMPLATE_CONTENT=$(cat index.html)
          UPDATED_CONTENT="${TEMPLATE_CONTENT//{{tip}}/${{ steps.tip_info.outputs.tip }}}"
          if [[ "${{ steps.download_image.outputs.image_exists }}" == "true" ]]; then
            UPDATED_CONTENT="${UPDATED_CONTENT//{{image_section}}/ <div id=\"tip-image\"><img src=\"image.png\" alt=\"Daily tip illustration\" /></div>}"
          else
            UPDATED_CONTENT="${UPDATED_CONTENT//{{image_section}}//}"
          fi
          echo "$UPDATED_CONTENT" > index.html

      - name: Add daily tip
        run: |
          echo "${{ steps.tip_info.outputs.tip }}" > tip.txt
          git add tip.txt index.html
          if [[ -f image.png ]]; then
            git add image.png
          fi
          git commit -m "Daily tip update: $(date +%F)"

      - name: Force push to gh-pages
        run: |
          git branch -D gh-pages || true
          git branch -m gh-pages
          git push -f origin gh-pages