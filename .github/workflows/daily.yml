name: Daily Tip Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  update-tip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get current tip
        id: tip
        env:
          TIPS_JSON: ${{ secrets.TIPS_JSON }}
        run: |
          DAY=$(date +%j | sed 's/^0*//')
          TIP=$(echo "$TIPS_JSON" | jq -r ".tips[$((DAY-1))].text")
          echo "tip=$TIP" >> $GITHUB_OUTPUT

      - name: Get current image (with debug logging)
        id: image
        env:
          TIPS_JSON: ${{ secrets.TIPS_JSON }}
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          # fail-fast + show each command
          set -euo pipefail
          set -x
      
          # 1) Figure out which tip index today is
          DAY=$(date +%j | sed 's/^0*//')
          echo "🔢 DAY of year: $DAY"
      
          # 2) Extract the image field (will be empty or "null" if none)
          IMAGE=$(jq -r ".tips[$((DAY-1))].image" <<< "$TIPS_JSON")
          echo "🖼  IMAGE field from JSON: '$IMAGE'"
      
          # 3) If there is an image name, attempt to fetch it
          if [ -n "$IMAGE" ] && [ "$IMAGE" != "null" ]; then
            URL="https://api.github.com/repos/ChristanVersteeg/CyberTips/contents/images/${IMAGE}"
            echo "🌐 Download URL: $URL"
      
            # Use curl to fetch, capture both HTTP status and exit code
            HTTP_STATUS=$(curl -sSL \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3.raw" \
              -w "%{http_code}" \
              -o "$IMAGE" \
              "$URL" || true)
      
            CURL_EXIT=$?
            echo "📬 curl exit code: $CURL_EXIT, HTTP status: $HTTP_STATUS"
      
            # Check if file was actually written
            if [ "$CURL_EXIT" -eq 0 ] && [ "$HTTP_STATUS" -eq 200 ] && [ -f "$IMAGE" ]; then
              echo "✅ Successfully fetched '$IMAGE' ($(stat -c%s "$IMAGE") bytes)"
            else
              echo "❌ Failed to fetch '$IMAGE'."
            fi
          else
            echo "⚠️  No image defined for today."
          fi
      
          # 4) Show the current directory listing for sanity
          echo "📂 Workspace contents:"
          ls -lha .
      
          # 5) Export the output variable
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
        
        
        
        
      - name: Prepare gh-pages branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout --orphan temp
          git rm -rf .

      - name: Create index.html
        env:
          IMAGE: ${{ steps.image.outputs.image }}
        run: |
          # start the document
          cat <<EOF > index.html
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Daily Tip</title>
          </head>
          <body>
            <h1>Today's Tip:</h1>
            <div id="tip"></div>
          EOF
      
          # if we have an image filename, insert an <img> element
          if [ -n "$IMAGE" ]; then
            cat <<EOF >> index.html
            <div id="tip-image">
              <img src="$IMAGE" alt="Daily tip illustration" />
            </div>
          EOF
          fi
      
          # finish up with the script and closing tags
          cat <<EOF >> index.html
            <script>
              fetch('tip.txt')
                .then(response => response.text())
                .then(tip => document.getElementById('tip').textContent = tip);
            </script>
          </body>
          </html>
          EOF
        

      - name: Add daily tip
        run: |
          echo "${{ steps.tip.outputs.tip }}" > tip.txt
          git add tip.txt index.html
          git commit -m "Daily tip update: $(date +%F)"

      - name: Force push to gh-pages
        run: |
          git branch -D gh-pages || true
          git branch -m gh-pages
          git push -f origin gh-pages